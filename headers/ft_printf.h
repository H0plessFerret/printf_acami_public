/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_printf.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: acami <acami@student.42.fr>                +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/04/21 14:23:08 by acami             #+#    #+#             */
/*   Updated: 2021/04/21 19:57:20 by acami            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef FT_PRINTF_H
# define FT_PRINTF_H

# include <stdlib.h>
# include <stdarg.h>
# include <unistd.h>

int			ft_printf(const char *format_spec, ...);

// prints symbols into standart output while % was not encountered
// returns the amount of symbols printed
int			ft_print_till_percent(const char **format_spec);

// returns allocated string - current specifier
// this string MUST BE FREED (most likely in ft_generate_mask)
char		*ft_isolate_specifiers(const char **format_spec);

// returns unsigned integer, representing a configuration of all specifiers
// (README.md holds more information)
uint32_t	ft_generate_mask(const char *specifiers, int *flag_len);

// returns a pointer to a function which will print the requested value
int			(*ft_find_corresponding_print(uint32_t mask))(void *, int);

// prints data using func generated by ft_find_corresponding_print
int			ft_print_arg(void *data, uint32_t mask, int (*func)(void *, int),
				int extra);

#endif
